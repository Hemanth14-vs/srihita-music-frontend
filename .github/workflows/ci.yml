name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Check formatting
      run: npm run format:check
    
    - name: Run tests
      run: npm run test:coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
    
    - name: Run verification check
      run: npm run verification-ready
    
    - name: Build project
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files-${{ matrix.node-version }}
        path: dist/

  # Uncomment and configure for deployment
  # deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Use Node.js 18
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 18
  #       cache: 'npm'
  #   
  #   - name: Install dependencies
  #     run: npm ci
  #   
  #   - name: Build project
  #     run: npm run build
  #   
  #   # Deploy to GitHub Pages
  #   - name: Deploy to GitHub Pages
  #     uses: peaceiris/actions-gh-pages@v3
  #     with:
  #       github_token: ${{ secrets.GITHUB_TOKEN }}
  #       publish_dir: ./dist
  #   
  #   # Or deploy to Netlify
  #   - name: Deploy to Netlify
  #     uses: nwtgck/actions-netlify@v2.0
  #     with:
  #       publish-dir: './dist'
  #       production-branch: main
  #       github-token: ${{ secrets.GITHUB_TOKEN }}
  #       deploy-message: "Deploy from GitHub Actions"
  #     env:
  #       NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  #       NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # Dependabot auto-merge for patch and minor updates
  dependabot:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    needs: test
    
    steps:
    - name: Dependabot metadata
      id: metadata
      uses: dependabot/fetch-metadata@v1.6.0
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"
    
    - name: Auto-merge Dependabot PRs
      if: steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor'
      run: gh pr merge --auto --merge "$PR_URL"
      env:
        PR_URL: ${{github.event.pull_request.html_url}}
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}